##IT специалисту Федору непросто угодить с отпуском. В прошлом году в июне Федор побывал в Вене, а в августе в Праге и ему очень понравилось. 
##Поэтому этим летом Федор снова хочет посетить два города, но повторять прошлогодний маршрут полностью ему скучно. 
##Федор снова хочет побывать в Вене в июне или в Праге в августе, но не то и другое одновременно. 
##Напишите программу, которая бы определяла подходит ли введенный маршрут под требования Федора.

a = input()
b = input()
if a == 'Вена' and b == 'Прага' or a == b:
    print('НЕТ')
elif a == 'Вена' or b == 'Прага':
    print('ДА')
else:
    print('НЕТ')
    
##На вход подается длины двух катетов в прямоугольном треугольнике. 
##Напишите программу, которая выводит его гипотенузу. 
##Входные числа могут быть целыми или с плавающей точкой.

a = float(input())
b = float(input())
kat = (a ** 2 + b ** 2) ** 0.5
print(kat)

##На вход подается рост пользователя в сантиметрах и вес в килограммах (каждый показатель – с новой строки, в новом запросе) 
##и выводится на экран значение индекса массы тела.
##Индекс массы тела считается по формуле: BMI = m / h2, где m – масса тела в килограммах, h – рост в метрах. Ответ округлите до 2 знаков после запятой

h = int(input()) / 100
m = int(input())
BMI = round(m / h**2, 2)
print(BMI)

##При регистрации ящика электронной почты пользователю необходимо придумать логин, а также резервный адрес электронной почты (для восстановления забытого пароля). 
##Напишите программу, которая проверяет, что пользователь ничего не перепутал и ввёл корректный логин (не содержащий символ «@») 
##и корректный резервный адрес (содержащий символ «@»). Иных проверок, кроме указанных, выполнять не надо.

a = input()
b = input()
if '@' not in a and '@' in b:
    print ('OK')
elif '@' in a and '@' not in b:
    print('Некорректный логин')
    print('Некорректный адрес')
elif '@' in a:
    print ('Некорректный логин')
else:
    print('Некорректный адрес')
    
##Напишите программу, которая считывает среднесуточную температуру, пока не встретится 26.0℃ и определяет количество полных недель, 
##которое пришлось ждать до потепления. 
##Сам этот день в период ожидания не включается.

cnt = 0
while True:
    a = float(input())
    if a < 26:
        cnt += 1
    else:
        break
print(cnt // 7)

##Факториалом натурального числа n называется произведение всех натуральных чисел от 1 до n включительно. 
##Факториал n обозначается n!. Например, 4! = 1 × 2 × 3 × 4 = 24 
##Написать программу, запрашивающую натуральное число n с клавиатуры (число n подает на вход тестирующая система), вычисляющую и печатающую n!. 
##Использовать какие-либо библиотечные функции нельзя (то есть запрещена конструкция import).

a = int(input())
cnt = 1
for i in range (2, a + 1):
    cnt = cnt * i
print(cnt)

##Числа Фибоначчии — это последовательность чисел, первые два члена которой являются числа 1 и 1, 
##а каждое последующее за ними число является суммой двух предыдущих. На вход подается целое число k - номер члена последовательности, 
##вывести соответствующее ему число. Считать, что число k всегда больше одного. (То есть на вход никогда не будет подано число, меньшее или равное одного.)

a = int(input())
b = 0
c = [1, 1]
for i in range(1, a - 1):
    b = c[i-1] + c[i]
    c.append(b)
print(c[a-1])

##Напишите программу, которая находит баги.
##На вход подаются строки до тех пор, пока не будет введено слово «СТОП». 
##Если хотя бы в одной введённой строке нашлось сочетание букв «Баг» или «баг», баг найден. 
##Программа выводит, во-первых, общее количество строк, в которых попадался баг, во-вторых, номер строки, на которой впервые был упомянут баг, 
##или -1 (минус один), если баг не встретился нигде.

b = []
c = 0
while True:
    a = input()
    if a != 'СТОП':
        c += 1
        if 'Баг' in a or 'баг' in a:
            b.append(c)
    else:
        break
if len(b) == 0:
    print(0, -1)
else:
    print(len(b), b[0])
    
##Выведите таблицу умножения(таблицу Пифагора) заданных размеров.

a = int(input())
b = int(input())
c = [[(i+1)*(j+1) for i in range(a)] for j in range(b)]
for i in range(len(c)):
    for j in range(len(c[i])):
        print(c[i][j], end =' ')
    print()

##IT специалист Федор решил попробовать себя в создании ASCII-смайлов, но как и все новички, начал с рисования простых фигур. 
##Помогите Федору написать программу построения прямоугольника n х m, состоящего из символов symb. 
##Фигура должна быть пустой, а не заполненной. То есть она должна состоять только из контура.

b = int(input())
a = int(input())
simvol = input()
print(simvol * a)
for i in range(b - 2):
    print(simvol, ' ' * (a - 2), simvol, sep='')
print(simvol * a)
